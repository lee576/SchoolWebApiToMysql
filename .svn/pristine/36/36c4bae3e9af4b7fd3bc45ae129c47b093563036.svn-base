<template>
    <div class="home">
        <div class="nav-lead clearfix">
            <div class="fl nav-lead-word"><a href="#">签约管理</a></div>
            <div class="fr batch-operation">
                <button class="operation-btn" @click="contractVisible = true">新增签约</button>
            </div>
        </div>
        <div class="page-content">
            <div class="nav-tab clearfix">
                <div class="fl">
                    <div class="fl search-input"><input type="text" class="se-input" v-model="feeName"
                                                        placeholder="请输入姓名或校园"></div>
                    <div class="fl search-button">
                        <button class="btn-pro" @click="search" style="margin-right: 8px">搜索</button>
                        <button class="btn-pro" @click="reset">重置</button>
                    </div>
                </div>
                <div class="fr right-btn-ta">
                    <button class="btn" @click="transferVisible = true">批量转移</button>
                </div>
            </div>
            <div class="payment-item-table">
                <div class="table-box">
                    <template>
                        <el-table
                                @selection-change="handleChange"
                                :data="tableData"
                                stripe
                                style="width: 100%">
                            <el-table-column
                                    type="selection"
                                    width="55">
                            </el-table-column>
                            <el-table-column
                                    prop="contractName"
                                    label="签约人姓名"
                            >
                            </el-table-column>
                            <el-table-column
                                    prop="schoolName"
                                    label="签约学校名称"
                            >
                            </el-table-column>
                            <el-table-column
                                    prop="contractTime"
                                    label="签约时间">
                            </el-table-column>
                            <el-table-column label="操作" width="140">
                                <template slot-scope="scope">
                                    <el-button type="text" size="small" class="edit-tr-con"
                                               @click="handleEdit(scope.$index, scope.row)">修改
                                    </el-button>
                                    <el-button type="text" size="small" class="del-tr-con"
                                               @click="handleRemove(scope.$index, scope.row)">转移
                                    </el-button>
                                </template>
                            </el-table-column>
                        </el-table>
                    </template>
                </div>
                <div class="block" style="text-align: right;">
                    <el-pagination
                            @size-change="handleSizeChange"
                            @current-change="handleCurrentChange"
                            :current-page="configTable.index"
                            :page-size="configTable.size"
                            layout="total, prev, pager, next"
                            :total="configTable.total">
                    </el-pagination>
                </div>
            </div>
        </div>


        <!--新增签约-->
        <el-dialog title="新增签约" :visible.sync="contractVisible" width="600px" top="25vh">
            <div class="tk-gray tk-height">
                <el-form :model="contractForm" :rules="contractrules" ref="contractForm" label-width="110px"
                         class="demo-ruleForm">
                    <el-form-item label="签约人姓名" prop="contractName">
                        <el-input v-model="contractForm.contractName" placeholder="请输入签约人姓名"></el-input>
                    </el-form-item>
                    <el-form-item label="签约学校名称" prop="schoolCode">
                        <el-select v-model="contractForm.schoolCode" filterable placeholder="请输入签约学校名称">
                            <el-option
                                    v-for="item in options"
                                    :key="item.schoolCode"
                                    :label="item.schoolName"
                                    :value="item.schoolCode">
                            </el-option>
                        </el-select>
                    </el-form-item>
                    <el-form-item label="签约时间" prop="contractTime">
                        <el-date-picker
                                v-model="contractForm.contractTime"
                                type="date"
                                placeholder="请选择签约时间" style="width:100%">
                        </el-date-picker>
                    </el-form-item>
                    <el-form-item label="阿里ID" prop="ali_user_id">
                        <el-input v-model="contractForm.ali_user_id" placeholder="请输入阿里ID"></el-input>
                    </el-form-item>
                </el-form>
            </div>
            <div slot="footer" class="dialog-footer">
                <el-button @click="cancelAddFrom('contractForm')">取 消</el-button>
                <el-button type="primary" @click="addFrom('contractForm')" class="sure-btn">添加</el-button>
            </div>
        </el-dialog>

        <!--编辑签约-->
        <el-dialog title="编辑签约" :visible.sync="editVisible" width="600px" top="25vh">
            <div class="tk-gray tk-height">
                <el-form :model="contractEditForm" :rules="contractEditrules" ref="contractEditForm" label-width="110px"
                         class="demo-ruleForm">
                    <el-form-item label="签约人姓名" prop="contractName">
                        <el-input v-model="contractEditForm.contractName" placeholder="请输入签约人姓名"></el-input>
                    </el-form-item>
                    <el-form-item label="签约学校名称" prop="school_code">
                        <el-select v-model="contractEditForm.school_code" filterable placeholder="请输入签约学校名称">
                            <el-option
                                    v-for="item in options"
                                    :key="item.schoolCode"
                                    :label="item.schoolName"
                                    :value="item.schoolCode">
                            </el-option>
                        </el-select>
                    </el-form-item>
                    <el-form-item label="签约时间" prop="contractTime">
                        <el-date-picker
                                v-model="contractEditForm.contractTime"
                                type="date"
                                @change="getSTime"
                                format="yyyy-MM-dd"
                                value-format="yyyy-MM-dd 00:00:00"
                                placeholder="请选择签约时间" style="width:100%;cursor: pointer">
                        </el-date-picker>
                    </el-form-item>
                    <el-form-item label="阿里ID" prop="ali_user_Id">
                        <el-input v-model="contractEditForm.ali_user_Id" placeholder="请输入阿里ID"></el-input>
                    </el-form-item>
                </el-form>
            </div>
            <div slot="footer" class="dialog-footer">
                <el-button @click="cancelEditFrom('contractEditForm')">取 消</el-button>
                <el-button type="primary" @click="editFrom('contractEditForm')" class="sure-btn">修改</el-button>
            </div>
        </el-dialog>

        <!--批量转移-->
        <el-dialog title="批量转移" :visible.sync="transferVisible" width="600px" top="25vh">
            <div class="tk-gray tk-height">
                <el-form :model="transferForm" :rules="transferrules" ref="transferForm" label-width="110px"
                         class="demo-ruleForm">
                    <el-form-item label="签约人姓名" prop="name">
                        <el-select v-model="transferForm.name" placeholder="请选择签约人姓名" style="width: 100%" filterable>
                            <el-option
                                    v-for="item in transfers"
                                    :key="item.contracterId"
                                    :label="item.contracterName"
                                    :value="item.contracterId">
                            </el-option>
                        </el-select>
                    </el-form-item>
                </el-form>
            </div>
            <div slot="footer" class="dialog-footer">
                <el-button @click="transferVisible = false">取 消</el-button>
                <el-button type="primary" @click="MoreTransfer('transferForm')" class="sure-btn">转移</el-button>
            </div>
        </el-dialog>

        <!--单个转移-->
        <el-dialog title="转移" :visible.sync="singletransferVisible" width="600px" top="25vh">
            <div class="tk-gray tk-height">
                <el-form :model="singletransferForm" :rules="transferrules" ref="singletransferForm" label-width="110px"
                         class="demo-ruleForm">
                    <el-form-item label="签约人姓名" prop="name">
                        <el-select v-model="singletransferForm.name" placeholder="请选择签约人姓名" style="width: 100%"
                                   filterable>
                            <el-option
                                    v-for="item in transfers"
                                    :key="item.contracterId"
                                    :label="item.contracterName"
                                    :value="item.contracterId">
                            </el-option>
                        </el-select>
                    </el-form-item>
                </el-form>
            </div>
            <div slot="footer" class="dialog-footer">
                <el-button @click="singletransferVisible = false">取 消</el-button>
                <el-button type="primary" @click="SureMove('singletransferForm')" class="sure-btn">转移</el-button>
            </div>
        </el-dialog>

    </div>
</template>

<script>
    export default {
        name: "ContractManagement",
        data() {
            return {
                feeName: '',
                contractVisible: false,
                transferVisible: false,
                singletransferVisible: false,
                editVisible: false,
                singletrans: "",
                currentPage1: 1,
                moreID: [],
                tableData: [{
                    contractName: '',
                    contractTime: '',
                    schoolName: ""
                }],
                configTable: {
                    total: 0,
                    size: 10,
                    index: 0
                },
                options: [],
                contractForm: {
                    contractName: '',
                    schoolCode: '',
                    contractTime: '',
                    ali_user_id: ''
                }, contractrules: {
                    contractName: [
                        {required: true, message: '请输入签约人姓名', trigger: 'blur'}
                    ], schoolCode: [
                        {required: true, message: '请输入签约学校名称', trigger: 'blur'}
                    ], contractTime: [
                        {required: true, message: '请选择签约时间', trigger: 'blur'}
                    ], ali_user_id: [
                        {required: true, message: '请输入阿里ID', trigger: 'blur'}
                    ]
                },
                //编辑
                editId: "",//编辑ID
                contractEditForm: {},
                contractEditrules: {
                    contractName: [
                        {required: true, message: '请输入签约人姓名', trigger: 'blur'}
                    ], school_code: [
                        {required: true, message: '请输入签约学校名称', trigger: 'blur'}
                    ], contractTime: [
                        {required: true, message: '请选择签约时间', trigger: 'blur'}
                    ], ali_user_Id: [
                        {required: true, message: '请输入阿里ID', trigger: 'blur'}
                    ]
                },
                transfers: [],
                transferForm: {
                    name: '',
                },
                singletransferForm: {
                    name: '',
                },
                transferrules: {
                    name: [
                        {required: true, message: '请输入签约人姓名', trigger: 'blur'}
                    ]
                },
            }
        },
        created() {
            this.init()

        },
        mounted() {
            this.axios.get(`/api/ContracInfo/GetAllschoolList`).then(res => {
                console.log(res)
                this.options = res.data.aaData
            })
            this.axios.get(`/api/ContracInfo/GetAllContracter`).then(res => {
                console.log(res)
                this.transfers = res.data.aaData
            })
        },
        methods: {
            init() {
                this.axios.get(`/api/ContracInfo/GetContractInfoList`, {
                    params: {
                        sEcho: 0,
                        iDisplayStart: this.configTable.index,
                        iDisplayLength: this.configTable.size,
                        schoolCode_Name: this.feeName,
                        startTime: ""
                    }
                }).then(res => {
                    this.tableData = res.data.aaData
                    this.configTable.total = res.data.iTotalRecords
                    console.log(res)
                })
            },
            handleSizeChange(val) {
                this.configTable.size = val
                this.init()
                console.log(`每页 ${val} 条`);
            },
            handleCurrentChange(val) {
                this.configTable.index = val
                this.init()
                console.log(`当前页: ${val}`);
            },
            getSTime(val) {
                this.contractForm.contractTime = val;//这个sTime是在data中声明的，也就是v-model绑定的值
            },
            //新增签约
            addFrom(formName) {
                this.$refs[formName].validate((valid) => {
                    if (valid) {
                        this.axios.get(`/api/ContracInfo/AddContractInfo`, {
                            params: {
                                contractName: this.contractForm.contractName,
                                schoolCode: this.contractForm.schoolCode,
                                contractTime: this.contractForm.contractTime,
                                ali_user_id: this.contractForm.ali_user_id,
                            }
                        }).then(res => {
                            if (res.data.code = "000000") {
                                this.$message({
                                    message: res.data.msg,
                                    type: 'success'
                                });
                                this.contractVisible = false
                                this.$refs[formName].resetFields();
                                this.init()
                            } else if (res.data.code = "111111") {
                                this.$message.error(res.data.msg);
                            }
                            console.log(res)
                        })
                    } else {
                        this.$message.error('表单出错,请检查表单');
                        return false;
                    }
                });
            },
            cancelAddFrom(formName) {
                this.$refs[formName].resetFields();
                this.contractVisible = false
            },
            //编辑签约
            handleEdit(index, row) {
                console.log(row)
                this.editId = row.contractId
                this.editVisible = true
                this.axios.get(`/api/ContracInfo/GetContractInfoById`, {
                    params: {
                        contractId: row.contractId
                    }
                }).then(res => {
                    this.contractEditForm = res.data.aaData
                    console.log(res)
                })
            },
            editFrom(formName) {
                this.$refs[formName].validate((valid) => {
                    if (valid) {
                        this.axios.get(`/api/ContracInfo/UpdateContractInfo`, {
                            params: {
                                contractId: this.editId,
                                contractTime: this.contractEditForm.contractTime,
                                name: this.contractEditForm.contractName,
                                ali_userid: this.contractEditForm.ali_user_Id
                            }
                        }).then(res => {
                            if (res.data.code == "000000") {
                                this.$message({
                                    message: res.data.msg,
                                    type: 'success'
                                });
                                this.init()
                                this.editVisible = false
                            } else if (res.data.code == "111111") {
                                this.$message.error(res.data.msg);
                                this.editVisible = false
                            }
                        })
                    } else {
                        this.$message.error('表单出错,请检查表单');
                        return false;
                    }
                })

            },
            //搜索
            //单个转移
            handleRemove(index, row) {
                this.singletrans = row.contractId
                this.singletransferVisible = true
            },
            SureMove(formName) {
                this.$refs[formName].validate((valid) => {
                    if (valid) {
                        this.axios.get(`/api/ContracInfo/BatchMoveContractInfo`, {
                            params: {
                                TocontractId: this.singletransferForm.name,
                                FromcontractId: this.singletrans
                            }
                        }).then(res => {
                            if (res.data.code = "000000") {
                                this.$message({
                                    message: res.data.msg,
                                    type: 'success'
                                });
                                this.singletransferVisible = false
                                this.$refs[formName].resetFields();
                                this.init()
                            } else if (res.data.code = "111111") {
                                this.$message.error(res.data.msg);
                            }
                            console.log(res)
                        })
                    } else {
                        this.$message.error('表单出错,请检查表单');
                        return false;
                    }
                })
            },
            //批量转移
            MoreTransfer(formName) {
                this.$refs[formName].validate((valid) => {
                    if (valid) {
                        const arr = []
                        this.moreID.map(res => {
                            arr.push(res.contractId)
                        })
                        console.log(arr)
                        this.axios.get(`/api/ContracInfo/BatchMoveContractInfo`, {
                            params: {
                                TocontractId: this.transferForm.name,
                                FromcontractId: arr.join(",")
                            }
                        }).then(res => {
                            if (res.data.code = "000000") {
                                this.$message({
                                    message: res.data.msg,
                                    type: 'success'
                                });
                                this.transferVisible = false
                                this.$refs[formName].resetFields();
                                this.init()
                            } else if (res.data.code = "111111") {
                                this.$message.error(res.data.msg);
                            }
                            console.log(res)
                        })
                    } else {
                        this.$message.error('表单出错,请检查表单');
                        return false;
                    }
                })
            },
            //多选
            handleChange(val) {
                this.moreID = val
            },
            //搜索
            search() {
                this.init()
            },
            //重置
            reset() {
                this.feeName = "",
                    this.init()
            },
        },
    }
</script>

<style scoped>
    .el-form-item__content .el-select{width:100%}
</style>