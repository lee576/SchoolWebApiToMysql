<template>
    <div class="home">
        <div class="nav-lead clearfix">
            <div class="fl nav-lead-word"><a href="#" class="active-gray">用户权限管理></a><a href="#">修改信息</a></div>
            <div class="fl">
                <router-link to="/UserRights" class="cx-back">返回</router-link>
            </div>
        </div>
        <div class="page-content">
            <div class="add-page-box">
                <div class="add-page">
                    <div class="add-page-title">修改信息</div>
                    <el-form :model="adminForm" :rules="adminrules" ref="adminForm" label-width="100px"
                             class="demo-ruleForm">
                        <div class="gray-box-part">

                            <el-form-item label="姓名" prop="userName" placeholder="请输入姓名">
                                <el-input v-model="adminForm.userName"></el-input>
                            </el-form-item>
                            <el-form-item label="登录账号" prop="loginuser">
                                <el-input v-model="adminForm.loginuser" placeholder="请输入登录账号"></el-input>
                            </el-form-item>
                            <el-form-item label="登录密码" prop="passwords">
                                <el-input v-model="adminForm.passwords" placeholder="请输入登录密码" type="password"></el-input>
                            </el-form-item>
                            <el-form-item label="确认密码" prop="dlpassword">
                                <el-input v-model="adminForm.dlpassword" placeholder="请再次输入登录密码" type="password"></el-input>
                            </el-form-item>
                        </div>
                        <el-form-item>
                            <el-button class="btn-bg"  @click="submitForm('adminForm')">修改</el-button>
                            <el-button class="btn-border" @click="resetForm('adminForm')">取消</el-button>
                        </el-form-item>
                    </el-form>
                </div>
            </div>
        </div>
    </div>
</template>

<script>
    export default {
        name: "UserRightsEdit",
        data() {
            return {
                adminForm: {
                    userName: '',
                    loginuser: '',
                    passwords: '',
                    dlpassword: '',
                },
                adminrules: {
                    userName: [
                        {required: true, message: '请输入姓名', trigger: 'blur'}
                    ], loginuser: [
                        {required: true, message: '请输入登录账号', trigger: 'blur'}
                    ], passwords: [
                        {required: true, message: '请输入登录密码', trigger: 'blur'}
                    ], dlpassword: [
                        {required: true, message: '请再次输入登录密码', trigger: 'blur'}
                    ],
                },
                treeNum: [],
                checked: false,

            }
        },
        created() {
            this.axios.get(`/api/Cashier/GetDinningHall`,{
                params:{
                    school_id: localStorage.schoolcode
                }
            }).then(res=>{
                console.log(res)
                this.options=res.data.data
            })
            this.Getdata()
        },
        methods: {
            Getdata() {
                this.axios.get(`/api/UserRightMange/GetUserById`, {
                    params: {
                        id: this.$route.params.id
                    }
                }).then(res => {
                    console.log(res)
                    if (res.data.code = "000000") {
                        console.log(res)
                        this.adminForm = res.data.aaData
                        this.adminForm.dining_talls=parseInt(res.data.aaData.dining_talls)
                        this.treeNum=this.adminForm.menus.split(',')
                        if (this.adminForm.roletype == 1) {
                            this.show = true
                        } else {
                            this.show = false
                        }
                    }
                })
            },


            changeshow() {
                console.log(this.adminForm.roletype)
                if (this.adminForm.roletype == 1) {
                    this.show = true
                } else {
                    this.show = false
                }
            },
            //修改提交
            submitForm(formName) {
                this.$refs[formName].validate((valid) => {
                    if (valid&&this.adminForm.passwords==this.adminForm.dlpassword) {
                        this.axios.get(`/api/UserRightMange/UpdatePwd`,{
                            params:{
                                "id":  this.$route.params.id,
                                "schoolcode": localStorage.schoolcode,
                                "userName": this.adminForm.userName,
                                "loginuser": this.adminForm.loginuser,
                                "password": this.adminForm.passwords,
                            }
                        }).then(res=>{
                            console.log(res)
                            if(res.data.code="000000"){
                                this.$message({
                                    message: '修改成功',
                                    type: 'success'
                                });
                                this.$router.push({name: "UserRights"})
                            }else{
                                this.$message.error('修改失败');
                            }
                        })

                    } else if (valid&&this.adminForm.password!=this.adminForm.dlpassword) {
                        this.$message.error('两次密码不一样');
                    }else{
                        this.$message.error('表单输入有误');
                        return false;
                    }
                });
            },
            resetForm(formName) {
                this.$refs[formName].resetFields();
                this.$router.push({name: "UserRights"})
            }
        }
    }
</script>

<style scoped>
    .tree_data {
        overflow: scroll
    }

    .tree_data::-webkit-scrollbar {
        display: none
    }
</style>